asyncapi: 2.1.0
info:
  version: '59'
  title: Kafka
  x-channel-name: "/Channels/KafkaChannel"
channels:
  be_kafka_topic:
    subscribe:
      operationId: Channels_KafkaChannel_orderDest
      x-default-event: "/Events/OrderEvent"
      message:
        "$ref": "#/components/messages/OrderEvent"
      x-dest-properties:
        compression.type: none
        sync.sender: 'true'
        session.timeout.msec: '30000'
        group.id: be_group
        autocommit.interval: '5000'
        IncludeEventType: ALWAYS
        message.key.rf: "/RuleFunctions/OrderKeyRF"
        sync.sender.max.wait: '30000'
        serializer-deserializer-class: com.tibco.cep.driver.kafka.serializer.KafkaTextPayloadSerializer
        enable.autocommit: 'true'
        topic.name: be_kafka_topic
        heartbeat.interval.msec: '3000'
        consumer.threads: '1'
  Kafka-38-Kafka-33-customerSignupXML:
    subscribe:
      operationId: Channels_KafkaChannel_customerSignupXML
      x-default-event: "/Events/CustomerSignupXML"
      message:
        "$ref": "#/components/messages/CustomerSignupXML"
      x-dest-properties:
        compression.type: none
        sync.sender: 'false'
        session.timeout.msec: '30000'
        group.id: be_group
        autocommit.interval: '5000'
        IncludeEventType: ALWAYS
        sync.sender.max.wait: '30000'
        serializer-deserializer-class: com.tibco.cep.driver.kafka.serializer.KafkaXmlSerializer
        enable.autocommit: 'true'
        topic.name: Kafka-38-Kafka-33-customerSignupXML
        heartbeat.interval.msec: '3000'
        consumer.threads: '1'
  orderStatusDest:
    subscribe:
      operationId: Channels_KafkaChannel_orderStatusDest
      x-default-event: "/Events/OrderStatusRequest"
      message:
        "$ref": "#/components/messages/OrderStatusRequest"
      x-dest-properties:
        compression.type: none
        sync.sender: 'true'
        session.timeout.msec: '30000'
        group.id: be_group
        autocommit.interval: '5000'
        IncludeEventType: ALWAYS
        message.key.rf: "/RuleFunctions/OrderKeyRF"
        sync.sender.max.wait: '30000'
        serializer-deserializer-class: com.tibco.cep.driver.kafka.serializer.KafkaMapSerializer
        enable.autocommit: 'true'
        topic.name: orderStatusDest
        heartbeat.interval.msec: '3000'
        consumer.threads: '1'
  Kafka-57-Kafka-38-Kafka-33-customerSignupJSON:
    subscribe:
      operationId: Channels_KafkaChannel_customerSignupJSON
      x-default-event: "/Events/CustomerSignupJSON"
      message:
        "$ref": "#/components/messages/CustomerSignupJSON"
      x-dest-properties:
        compression.type: none
        sync.sender: 'false'
        session.timeout.msec: '30000'
        group.id: be_group
        autocommit.interval: '5000'
        IncludeEventType: ALWAYS
        sync.sender.max.wait: '30000'
        serializer-deserializer-class: com.tibco.cep.driver.kafka.serializer.KafkaJsonSerializer
        enable.autocommit: 'true'
        topic.name: Kafka-57-Kafka-38-Kafka-33-customerSignupJSON
        heartbeat.interval.msec: '3000'
        consumer.threads: '1'
servers:
  default:
    url: localhost:9092
    protocol: Kafka
    x-config-properties:
      kafka.security.protocol: PLAINTEXT
      kafka.sasl.mechanism: PLAIN
      async.server.url.property: kafka.broker.urls
      kafka.broker.urls: localhost:9092
      async.channelName.property: topic.name
components:
  schemas:
    ceptRefAttributes:
      type: object
      properties:
        ref:
          type: string
          historyPolicy: 0
          historySize: 0
    ConceptRef_:
      type: object
      properties:
        attributes:
          "$ref": "#/components/schemas/ceptRefAttributes"
    OrderItem:
      properties:
        item_name:
          type: string
          historyPolicy: 0
          historySize: 0
        price:
          type: number
          format: double
          historyPolicy: 0
          historySize: 0
        quantity:
          type: integer
          format: int32
          historyPolicy: 0
          historySize: 0
    Order:
      type: object
      xml:
        namespace: www.tibco.com/be/ontology/Concepts/Order
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/OrderItem"
            historyPolicy: 0
            historySize: 0
            x-conceptPath: "/Concepts/OrderItem"
            x-event-payloadtype: CEPT_REF
    OrderEvent:
      type: object
      properties:
        payload:
          properties:
            Order:
              type: object
              "$ref": "#/components/schemas/Order"
              historyPolicy: 0
              historySize: 0
              x-conceptPath: "/Concepts/Order"
              x-event-payloadtype: CEPT_REF
              x-nameSpace: www.tibco.com/be/ontology/Concepts/Order
        customer_id:
          type: string
        order_id:
          type: string
    Address:
      properties:
        city:
          type: string
          historyPolicy: 0
          historySize: 0
        state:
          type: string
          historyPolicy: 0
          historySize: 0
        zipcode:
          type: integer
          format: int64
          historyPolicy: 0
          historySize: 0
    ReferenceCon:
      properties:
        ReferenceCon1:
          type: string
          historyPolicy: 0
          historySize: 0
        ReferenceCon2:
          type: integer
          format: int32
          historyPolicy: 0
          historySize: 0
    Customer:
      type: object
      xml:
        namespace: www.tibco.com/be/ontology/Concepts/Customer
      properties:
        name:
          type: string
          historyPolicy: 0
          historySize: 0
        age:
          type: integer
          format: int32
          historyPolicy: 0
          historySize: 0
        address:
          type: object
          "$ref": "#/components/schemas/Address"
          historyPolicy: 0
          historySize: 0
          x-conceptPath: "/Concepts/Address"
          x-event-payloadtype: CEPT_REF
        SSN:
          type: integer
          format: int64
          historyPolicy: 0
          historySize: 0
        income:
          type: number
          format: double
          historyPolicy: 0
          historySize: 0
        dob:
          type: string
          format: date-time
          historyPolicy: 0
          historySize: 0
        eligible:
          type: boolean
          historyPolicy: 0
          historySize: 0
        refer:
          type: object
          "$ref": "#/components/schemas/ConceptRef_"
          historyPolicy: 0
          historySize: 0
          x-conceptPath: "/Concepts/ReferenceCon"
          x-event-payloadtype: CEPT_REF
    CustomerSignupXML:
      type: object
      properties:
        payload:
          properties:
            Customer:
              type: object
              "$ref": "#/components/schemas/Customer"
              historyPolicy: 0
              historySize: 0
              x-conceptPath: "/Concepts/Customer"
              x-event-payloadtype: CEPT_REF
              x-nameSpace: www.tibco.com/be/ontology/Concepts/Customer
    OrderStatusRequest:
      type: object
      properties:
        orderStatusId:
          type: string
    CustomerSignupJSON:
      type: object
      properties:
        payload:
          properties:
            Customer:
              type: object
              "$ref": "#/components/schemas/Customer"
              historyPolicy: 0
              historySize: 0
              x-conceptPath: "/Concepts/Customer"
              x-event-payloadtype: CEPT_REF
              x-nameSpace: www.tibco.com/be/ontology/Concepts/Customer
  messages:
    OrderEvent:
      payload:
        "$ref": "#/components/schemas/OrderEvent"
      contentType: application/json
    CustomerSignupXML:
      payload:
        "$ref": "#/components/schemas/CustomerSignupXML"
      contentType: application/json
    OrderStatusRequest:
      payload:
        "$ref": "#/components/schemas/OrderStatusRequest"
      contentType: application/json
    CustomerSignupJSON:
      payload:
        "$ref": "#/components/schemas/CustomerSignupJSON"
      contentType: application/json
      examples:
      - name: Test
        payload:
          payload:
            Customer:
              name: John
              age: 25
              address:
                city: Pune
                state: MH
                zipcode: 411027
              SSN: 1234567
              income: 11000
              dob: '2019-08-24T14:15:22Z'
              eligible: true
              refer:
                attributes:
                  ref: "[typeId:0|extId=ref1]"
