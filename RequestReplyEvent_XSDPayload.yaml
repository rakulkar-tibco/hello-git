asyncapi: "2.1.0"
info:
  version: "65"
  title: "RequestReplyEventXSDPayload"
  x-channel-name: "/Channels/Kafka"
channels:
  be_kafka_topic:
    subscribe:
      operationId: "Channels_Kafka_testJson"
      x-default-event: "/Events/SendStudentDataJson"
      message:
        $ref: "#/components/messages/SendStudentDataJson"
      x-dest-properties:
        compression.type: "none"
        group.id: "be_group"
        autocommit.interval: "5000"
        schema.registry.url: "http://localhost:8081"
        enable.autocommit: "true"
        heartbeat.interval.msec: "3000"
        consumer.threads: "1"
        sync.sender: "false"
        session.timeout.msec: "30000"
        schema.registry.platform: "default"
        update.schema.registry: "false"
        IncludeEventType: "ALWAYS"
        schema.registry.authentication: "default"
        sync.sender.max.wait: "30000"
        serializer-deserializer-class: "com.tibco.cep.driver.kafka.serializer.KafkaJsonSerializer"
        topic.name: "RequestReplyEventXSDPayload-62-RequestReplyEventXSDPayload-62-RequestReplyEventXSDPayload-57-be_kafka_topic"
        max.poll.interval.ms: "300000"
  be_kafka_topicxml:
    subscribe:
      operationId: "Channels_Kafka_testXml"
      x-default-event: "/Events/SendStudentDataXml"
      message:
        $ref: "#/components/messages/SendStudentDataXml"
      x-dest-properties:
        compression.type: "none"
        group.id: "be_group"
        autocommit.interval: "5000"
        schema.registry.url: "http://localhost:8081"
        enable.autocommit: "true"
        heartbeat.interval.msec: "3000"
        consumer.threads: "1"
        sync.sender: "false"
        session.timeout.msec: "30000"
        schema.registry.platform: "default"
        update.schema.registry: "false"
        IncludeEventType: "ALWAYS"
        schema.registry.authentication: "default"
        sync.sender.max.wait: "30000"
        serializer-deserializer-class: "com.tibco.cep.driver.kafka.serializer.KafkaMapSerializer"
        topic.name: "be_kafka_topicxml"
        max.poll.interval.ms: "300000"
servers:
  default:
    url: "localhost:9092"
    protocol: "Kafka"
    x-config-properties:
      kafka.security.protocol: "PLAINTEXT"
      kafka.sasl.mechanism: "PLAIN"
      async.server.url.property: "kafka.broker.urls"
      kafka.broker.urls: "localhost:9092"
      async.channelName.property: "topic.name"
components:
  schemas:
    Student_Request_Element:
      type: "object"
      xml:
        namespace: "http://tibco.com/qa/xsd/student"
      properties:
        Name:
          type: "string"
        Roll_no:
          type: "integer"
        Marks:
          type: "number"
        IsTopper:
          type: "boolean"
        RegistrationNo:
          type: "integer"
        Subjects:
          type: "string"
        DOB:
          type: "string"
          format: "date-time"
    SendStudentDataJson:
      type: "object"
      properties:
        payload:
          properties:
            Student_Request_Element:
              type: "object"
              $ref: "#/components/schemas/Student_Request_Element"
              historyPolicy: 0
              historySize: 0
              x-conceptPath: "Student_Request_Element"
              x-event-payloadtype: "XSD_ELEMENT_REF"
              x-nameSpace: "http://tibco.com/qa/xsd/student"
    SendStudentDataXml:
      type: "object"
      properties:
        payload:
          properties:
            Student_Request_Element:
              type: "object"
              $ref: "#/components/schemas/Student_Request_Element"
              historyPolicy: 0
              historySize: 0
              x-conceptPath: "Student_Request_Element"
              x-event-payloadtype: "XSD_ELEMENT_REF"
              x-nameSpace: "http://tibco.com/qa/xsd/student"
  messages:
    SendStudentDataJson:
      payload:
        $ref: "#/components/schemas/SendStudentDataJson"
      contentType: "application/xml"
    SendStudentDataXml:
      payload:
        $ref: "#/components/schemas/SendStudentDataXml"
      contentType: "application/xml"
      examples:
        - name : Test3
          payload:     
            payload:
                "<?xml version='1.0' encoding='UTF-8'?>
                <payload>
                <Student_Request_Element xmlns='http://tibco.com/qa/xsd/student'>
                        <Name>Bob</Name>
                        <Roll_no>12</Roll_no>
                        <Marks>88.92</Marks>
                        <IsTopper>true</IsTopper>
                        <RegistrationNo>345677</RegistrationNo>
                        <Subjects>Maths,Science</Subjects>
                        <DOB>2019-08-24T14:15:22Z</DOB>
                        <attributes>
                            <type>http://tibco.com/qa/xsd/student</type>
                        </attributes>
                </Student_Request_Element>
                </payload>"
